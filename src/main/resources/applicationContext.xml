<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache.xsd
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <description>Open Platform</description>
    
    <context:annotation-config/>
	<!-- <mvc:annotation-driven/> -->
    <!-- ajax请求默认返回JSON -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<bean id="stringHttpMessageConverter"  
		        class="org.springframework.http.converter.StringHttpMessageConverter">  
		        <constructor-arg value="UTF-8" index="0"></constructor-arg>
		        <!--避免出现乱码 -->  
		        <property name="supportedMediaTypes">  
		            <list>  
		                <value>text/plain;charset=UTF-8</value>
		                <value>text/xml;charset=UTF-8</value>
		            </list>  
		        </property>
		    </bean>
			<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<aop:aspectj-autoproxy/>
    
	
    <context:component-scan base-package="com.chenj.weixin.open.platform" />   
	
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
			    <value>classpath:jdbc.properties</value>
				<value>classpath:dev/weixin.properties</value>
			</list>
		</property>
	</bean>
    
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

    <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	
	<bean id="formHttpMessageConverter"
		class="org.springframework.http.converter.FormHttpMessageConverter" />

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html" />
				<entry key="json" value="application/json" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<!-- <property name="prefix" value="/WEB-INF/jsp/"/> -->
					<property name="suffix" value=".html" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>
	
	
	<!--      当Spring容器启动完成后执行下面的这个Bean -->
    <bean class="com.chenj.weixin.open.platform.executor.processor.InstantiationTracingBeanPostProcessor"/>
	
    <!-- 配置数据源(连接池，proxool) -->  
    <!-- <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">  
        <property name="targetDataSource">  
            <bean class="org.logicalcobwebs.proxool.ProxoolDataSource">  
                <property name="driver" value="com.mysql.jdbc.Driver" />  
                <property name="driverUrl" value="${jdbc.url}" />  
                <property name="user" value="${jdbc.username}" />  
                <property name="password" value="${jdbc.password}" />  
                <property name="maximumConnectionCount" value="${proxool.maxConnCount}" />  
                <property name="minimumConnectionCount" value="${proxool.minConnCount}" />  
                <property name="statistics" value="${proxool.statistics}" />  
                <property name="simultaneousBuildThrottle" value="${proxool.simultaneousBuildThrottle}" />  
                <property name="trace" value="${proxool.trace}" />
            </bean>  
        </property>  
    </bean> -->
    
    <bean id="vrsRankDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="testOnBorrow" value="true"/>
	</bean>
  
    <!-- Session工厂 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="vrsRankDataSource" />  
        <!-- mybatis配置文件 -->  
        <property name="configLocation" value="classpath:mybatis.xml" />  
    </bean>  
      
    <!-- 配置SqlSessionTemplate -->    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">    
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />    
    </bean>  
    
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerVariables">
			<map>
				<!--<entry key="mainDomain" value="${mainDomain}" />-->
				<!--<entry key="miscDomain" value="${miscDomain}" />-->
			</map>
		</property>
		<property name="freemarkerSettings">
			<props>
				<prop key="locale">zh_CN</prop>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>
    
    <!-- 微信SDK -->
	 <bean id="wxMpConfigStorage" class="me.chanjar.weixin.mp.api.WxMpInMemoryConfigStorage">
	 	<property name="appId" value="${APP_ID}"/>
	 	<property name="secret" value="${APP_SECRET}"/>
	 	<property name="token" value="${APP_TOKEN}"/>
	 	<property name="aesKey" value="${APP_AES_KEY}"/>
	 </bean>
	 
	 <bean id="wxService" class="me.chanjar.weixin.mp.api.WxMpServiceImpl">
	 	<property name="wxMpConfigStorage" ref="wxMpConfigStorage"/>
	 </bean>
	 
	 <bean id="wxMpMessageRouter" class="me.chanjar.weixin.mp.api.WxMpMessageRouter">
	 	<constructor-arg index="0" ref="wxService"/>
	 </bean>
    
</beans>  